COPY 复制文件
格式：
	COPY <源路径>... <目标路径>
	COPY ["<源路径1>",... "<目标路径>"]
	COPY 指令将从构建上下文目录中 <源路径> 的文件/目录复制到新的一层的镜像内的 <目标路径> 位置。
	比如：
		COPY package.json /usr/src/app/
	<源路径> 可以是多个，甚至可以是通配符，其通配符规则要满足 Go 的 filepath.Match 规则，如：
		COPY hom* /mydir/
		COPY hom?.txt /mydir/
	<目标路径> 可以是容器内的绝对路径，也可以是相对于工作目录的相对路径（工作目录可以用 WORKDIR 指令来指定）。
	目标路径不需要事先创建，如果目录不存在会在复制文件前先行创建缺失目录。

	使用 COPY 指令，源文件的各种元数据都会保留。比如读、写、执行权限、文件变更时间等。这个特性对于镜像定制很有用。
	特别是构建相关文件都在使用 Git 进行管理的时候。

ADD 更高级的复制文件
ADD 指令和 COPY 的格式和性质基本一致。但是在 COPY 基础上增加了一些功能。
	如果 <源路径> 为一个 tar 压缩文件的话，压缩格式为 gzip, bzip2 以及 xz 的情况下，
	ADD 指令将会自动解压缩这个压缩文件到 <目标路径> 去。
	在某些情况下，这个自动解压缩的功能非常有用，比如官方镜像 ubuntu 中：
	ROM scratch
    ADD ubuntu-xenial-core-cloudimg-amd64-root.tar.gz /
    但在某些情况下，如果我们真的是希望复制个压缩文件进去，而不解压缩，这时就不可以使用 ADD 命令了。

    在 Docker 官方的最佳实践文档中要求，尽可能的使用 COPY，
    因为 COPY 的语义很明确，就是复制文件而已，而 ADD 则包含了更复杂的功能，其行为也不一定很清晰。
    最适合使用 ADD 的场合，就是所提及的需要自动解压缩的场合。

	ADD 指令会令镜像构建缓存失效，从而可能会令镜像构建变得比较缓慢。

CMD 容器启动命令
CMD 指令的格式和 RUN 相似，也是两种格式：
	shell 格式：CMD <命令>
	exec 格式：CMD ["可执行文件", "参数1", "参数2"...]
	参数列表格式：CMD ["参数1", "参数2"...]。在指定了 ENTRYPOINT 指令后，用 CMD 指定具体的参数。

	在指令格式上，一般推荐使用 exec 格式，这类格式在解析时会被解析为 JSON 数组，因此一定要使用双引号 "，而不要使用单引号。

	如果使用 shell 格式的话，实际的命令会被包装为 sh -c 的参数的形式进行执行。比如：
		CMD echo $HOME
	在实际执行中，会将其变更为：
		CMD [ "sh", "-c", "echo $HOME" ]

	Docker 不是虚拟机，容器中的应用都应该以前台执行，而不是像虚拟机、物理机里面那样，
	用 upstart/systemd 去启动后台服务，容器内没有后台服务的概念。

	希望 upstart 来以后台守护进程形式启动 nginx 服务,
	通过CMD service nginx start,会被理解为 CMD [ "sh", "-c", "service nginx start"]，
	因此主进程实际上是 sh。那么当 service nginx start 命令结束后，sh 也就结束了，
	sh 作为主进程退出了，自然就会令容器退出。
	正确的做法是直接执行 nginx 可执行文件，并且要求以前台形式运行。比如：
		CMD ["nginx", "-g", "daemon off;"]

ENTRYPOINT 入口点
	ENTRYPOINT 的格式和 RUN 指令格式一样，分为 exec 格式和 shell 格式。
	ENTRYPOINT 的目的和 CMD 一样，都是在指定容器启动程序及参数。
	ENTRYPOINT 在运行时也可以替代，不过比 CMD 要略显繁琐，需要通过 docker run 的参数 --entrypoint 来指定。

	当指定了 ENTRYPOINT 后，CMD 的含义就发生了改变，不再是直接的运行其命令，
	而是将 CMD 的内容作为参数传给 ENTRYPOINT 指令，换句话说实际执行时，将变为：
		<ENTRYPOINT> "<CMD>"
	使用ENTRYPOINT的一些场景:
	场景一：让镜像变成像命令一样使用
		假设我们需要一个得知自己当前公网 IP 的镜像，那么可以先用 CMD 来实现：
		FROM ubuntu:16.04
		RUN apt-get update \
		    && apt-get install -y curl \
		    && rm -rf /var/lib/apt/lists/*
		CMD [ "curl", "-s", "http://ip.cn" ]


